openapi: 3.0.0
info:
  title: Wine Database API
  version: 1.0.0
paths:
  /api/v1/users:
    post:
      summary: Get or create a user
      requestBody:
        description: User identification data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'  # Reference to the User schema

      responses:
        '200':
          description: User information returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'  # Reference to the User schema
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'  # Reference to the User schema
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'  # Reference to the BadRequestError schema
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'  # Reference to the InternalServerError schema

  /api/v1/wines:
    post:
      summary: Add a new wine
      requestBody:
        description: Data of the wine to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wine'  # Reference to the Wine schema
      responses:
        '201':
          description: Wine added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wine'  # Return the added wine
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'  # Reference to the BadRequestError schema

    get:
      summary: Get a list of wines (optional filter by color)
      parameters:
        - name: color
          in: query
          description: Filter by wine color
          required: false
          schema:
            type: string
            example: "Red"
      responses:
        '200':
          description: List of wines returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Wine'  # Reference to the Wine schema
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'  # Reference to the BadRequestError schema

  /api/v1/wines/{id}:
    put:
      summary: Edit an existing wine
      parameters:
        - name: id
          description: Barcode of the wine
          in: path
          required: true
          schema:
            type: string  # Modificato per riflettere che è un barcode
      requestBody:
        description: Updated wine data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wine'
      responses:
        '200':
          description: Wine updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wine'  # Return the updated wine
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'  # Reference to the BadRequestError schema
        '404':
          description: Wine not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'  # Reference to the NotFoundError schema

    delete:
      summary: Delete an existing wine
      parameters:
        - name: id
          in: path
          required: true
          description: Barcode of the wine
          schema:
            type: string  # Modificato per riflettere che è un barcode
      responses:
        '204':
          description: Wine deleted successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'  # Reference to the BadRequestError schema
        '404':
          description: Wine not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'  # Reference to the NotFoundError schema

components:
  schemas:
    User:
      type: object
      properties:
        googleId:
          type: string
          example: "some-google-id"
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          example: "john.doe@example.com"

    Wine:
      type: object
      properties:
        producer:
          type: string
          example: "Cantina Sociale"
        wine_name:
          type: string
          example: "Chianti"
        vintage:
          type: integer
          example: 2018
        color:
          type: string
          description: Wine color (e.g. Red, White, Rosé)
          example: "Red"
        production_area:
          type: string
          example: "Tuscany"
        image_path:
          type: string
          example: "/path/to/image"
        description:
          type: string
          example: "Wine with fruity flavors"
        rating:
          type: integer
          minimum: 1
          maximum: 5
          example: 4
        price:
          type: number
          format: float
          example: 12.99
        barcode:
          type: string
          example: "123456789012"

    BadRequestError:
      type: object
      properties:
        error:
          type: string
          example: "Invalid user data."  # Example error message for bad requests

    InternalServerError:
      type: object
      properties:
        error:
          type: string
          example: "Internal server error."  # Example error message for internal server errors

    NotFoundError:
      type: object
      properties:
        error:
          type: string
          example: "Wine not found."  # Example error message for not found resources
